{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vishal jha\\\\Desktop\\\\SIH\\\\SIH\\\\src\\\\DateTime.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"./Dte.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Clock() {\n  _s();\n  const [currentTime, setCurrentTime] = useState(new Date());\n  useEffect(() => {\n    // Update the current time every second\n    const intervalId = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n\n    // Clean up the interval on component unmount\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // Format the current time to the desired format\n  const formattedTime = currentTime.toLocaleString('en-US', {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n    timeZoneName: 'short'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"dateTime\",\n      children: formattedTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(Clock, \"f3elDUct5ap4W3FuLtGG73aMsLc=\");\n_c = Clock;\nexport default Clock;\nvar _c;\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Clock","_s","currentTime","setCurrentTime","Date","intervalId","setInterval","clearInterval","formattedTime","toLocaleString","weekday","year","month","day","hour","minute","second","timeZoneName","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Vishal jha/Desktop/SIH/SIH/src/DateTime.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport \"./Dte.css\";\r\n\r\nfunction Clock() {\r\n    const [currentTime, setCurrentTime] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        // Update the current time every second\r\n        const intervalId = setInterval(() => {\r\n            setCurrentTime(new Date());\r\n        }, 1000);\r\n\r\n        // Clean up the interval on component unmount\r\n        return () => clearInterval(intervalId);\r\n    }, []);\r\n\r\n    // Format the current time to the desired format\r\n    const formattedTime = currentTime.toLocaleString('en-US', {\r\n        weekday: 'long',\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n        hour: 'numeric',\r\n        minute: 'numeric',\r\n        second: 'numeric',\r\n        timeZoneName: 'short',\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <p className='dateTime'>{formattedTime}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Clock;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAIQ,IAAI,CAAC,CAAC,CAAC;EAE1DP,SAAS,CAAC,MAAM;IACZ;IACA,MAAMQ,UAAU,GAAGC,WAAW,CAAC,MAAM;MACjCH,cAAc,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;IAC9B,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAMG,aAAa,CAACF,UAAU,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,aAAa,GAAGN,WAAW,CAACO,cAAc,CAAC,OAAO,EAAE;IACtDC,OAAO,EAAE,MAAM;IACfC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,MAAM;IACbC,GAAG,EAAE,SAAS;IACdC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE,SAAS;IACjBC,YAAY,EAAE;EAClB,CAAC,CAAC;EAEF,oBACIlB,OAAA;IAAAmB,QAAA,eACInB,OAAA;MAAGoB,SAAS,EAAC,UAAU;MAAAD,QAAA,EAAEV;IAAa;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEd;AAACtB,EAAA,CA9BQD,KAAK;AAAAwB,EAAA,GAALxB,KAAK;AAgCd,eAAeA,KAAK;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}